<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:media="http://search.yahoo.com/mrss/"><channel><title><![CDATA[Game Developer]]></title><description><![CDATA[Bruno Cicanci]]></description><link>http://gamedeveloper.com.br/</link><generator>Ghost 0.7</generator><lastBuildDate>Wed, 20 Jul 2016 03:32:54 GMT</lastBuildDate><atom:link href="http://gamedeveloper.com.br/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title><![CDATA[Final Frontier: Skybox e mais destruição]]></title><description><![CDATA[<p>No <a href="http://gamedeveloper.com.br/final-frontier-playground-e-destruicao/">post anterior</a> sobre o meu projeto Final Frontier eu escrevi sobre como estava utilizando o playground para testar o gameplay e como fiz um modelo 3D feito no Blender ser destruído na Unity. Nest post vou falar sobre skybox e algumas melhorias que fiz para a destruição ser maior,</p>]]></description><link>http://gamedeveloper.com.br/final-frontier-skybox-e-mais-destruicao/</link><guid isPermaLink="false">f240357d-be53-41a9-ab5a-0ad23b9f4a65</guid><category><![CDATA[final frontier]]></category><dc:creator><![CDATA[Bruno Cicanci]]></dc:creator><pubDate>Wed, 20 Jul 2016 03:01:00 GMT</pubDate><media:content url="http://gamedeveloper.com.br/content/images/2016/07/ff-capa-3.jpg" medium="image"/><content:encoded><![CDATA[<img src="http://gamedeveloper.com.br/content/images/2016/07/ff-capa-3.jpg" alt="Final Frontier: Skybox e mais destruição"><p>No <a href="http://gamedeveloper.com.br/final-frontier-playground-e-destruicao/">post anterior</a> sobre o meu projeto Final Frontier eu escrevi sobre como estava utilizando o playground para testar o gameplay e como fiz um modelo 3D feito no Blender ser destruído na Unity. Nest post vou falar sobre skybox e algumas melhorias que fiz para a destruição ser maior, além de outros detalhes sobre a organização do projeto na Unity.</p>

<p><strong>Ao infinito e além</strong></p>

<p><a href="https://en.wikipedia.org/wiki/Skybox_(video_games)">Skybox</a> é o nome da textura que fica no "fundo" do cenário renderizado pela câmera principal. O skybox padrão da Unity é um céu azul e um "chão" marrom no horizonte e, além de eu achar feio, este skybox padrão não combinava com meu jogo. Então, fui na <a href="https://www.assetstore.unity3d.com/">Asset Store</a> procurar uma opção gratuita e que fizesse mais sentido e foi então que encontrei o incrível <a href="https://www.assetstore.unity3d.com/en/#!/content/3392">Skybox Volume 2 (Nebula)</a>!</p>

<p><img src="http://gamedeveloper.com.br/content/images/2016/07/ff-skybox-1.jpg" alt="Final Frontier: Skybox e mais destruição"></p>

<p>Esta coleção de skyboxes possui 7 opções diferentes, todas bem interessantes e muito bem detalhadas. Por enquanto vou utilizar o Stars01 (imagem acima), mas vou colocar alguns exemplos abaixo de outras opções que eu gostei. Apesar de todas opções serem bem legais é bom manter no projeto apenas as que serão utilizadas por que esta coleção tem 80MB. Por enquanto vou deixar todas, mas ao longo do projeto provavelmente vou remover as que não irei utilizar. </p>

<p><img src="http://gamedeveloper.com.br/content/images/2016/07/ff-skybox-2.jpg" alt="Final Frontier: Skybox e mais destruição"></p>

<p><img src="http://gamedeveloper.com.br/content/images/2016/07/ff-skybox-3.jpg" alt="Final Frontier: Skybox e mais destruição"></p>

<p><strong>Adicionando mais destruição</strong></p>

<p>No post anterior eu tinha colocado apenas uma caixa que, quando o tiro colide com ela, o modelo 3D é substituído pela versão "destruída" e a física é aplicada nela para que os pedaços voem pelo ar. Desta vez decidi fazer uma parede de caixas que explode as demais quando os destroços de uma voarem após a colisão com o tiro, e o resultado fica conforme a sequencia abaixo.</p>

<p><img src="http://gamedeveloper.com.br/content/images/2016/07/ff-antes-explosao.jpg" alt="Final Frontier: Skybox e mais destruição"></p>

<p><img src="http://gamedeveloper.com.br/content/images/2016/07/ff-explosao.jpg" alt="Final Frontier: Skybox e mais destruição"></p>

<p><img src="http://gamedeveloper.com.br/content/images/2016/07/ff-capa-3.jpg" alt="Final Frontier: Skybox e mais destruição"></p>

<p>Muitos modelos 3D voando pelo cenário com física para colisão podem fazer o jogo ficar pesado. Não é o caso para o meu jogo ainda, mas quando mais objetos estiverem no cenário, mais modelos serão desenhados na tela, o que pode ser um problema para alguns aparelhos com hardware limitado. É muito cedo para se preocupar em otimizar isso, pois ainda nem sei como o jogo será, mas fiz algumas alterações para minimizar este problema. </p>

<p>O modelo do tiro e dos da caixa destruída são removidos da cena pelo método da <a href="https://docs.unity3d.com/ScriptReference/Object.Destroy.html">Unity</a> chamado <code>Destroy(gameObject, timer)</code>, onde o <code>timer</code> é o tempo para que o objeto seja destruído após sua criação. Nada demais, mas já ajuda a manter a memória livre de objetos desnecessários.</p>

<p><strong>Organizando a casa</strong></p>

<p>Uma das alterações que fiz, seguindo a sugestão do leitor Felipe, foi colocar os assets baixados em um diretório separado ao invés de deixá-los jogados no projeto. Não tinha feito isso antes por ter apenas o <a href="https://www.assetstore.unity3d.com/en/#!/content/4392">Astra Starship Fleet Package</a>  no projeto, mas agora com o Skybox Volume 2 (Nebula) já faz mais sentido começar a organizar melhor. Ambos assets estão na pasta <code>ThirdParty Assets</code>, como mostra a imagem abaixo. Geralmente utilizo este nome ou algo parecido para esta pasta.</p>

<p><img src="http://gamedeveloper.com.br/content/images/2016/07/ff-organizacao.jpg" alt="Final Frontier: Skybox e mais destruição"></p>

<p>Outra alteração que fiz foi criar um novo prefab chamado <code>TestAsteroidGroup</code>, e adicionei 9 caixas dentro dele para formar a parede. É sempre bom criar prefabs para agrupar objetos, mesmo sendo outros prefabs. Outro detalhe visto na imagem acima é que estou colocando prefabs e scripts em diretórios com o mesmo nome da minha cena <code>Playground</code>. Estou fazendo isto por que quero manter tudo usado no playground separado do protótipo, mas sem a necessidade de criar um novo projeto.</p>

<p><strong>Próximos passos</strong></p>

<p>Eu mencionei no post passado mas acabei não tendo tempo de trabalhar na movimentação da nave, pelo menos não na implementação. Pesquisei algumas opções de controle e câmera, e no próximo post vou falar mais sobre isto. Se eu tiver tempo também quero começar a fazer um sistema simples de spawn para os meteoros (e talvez até achar assets para substituir as caixas). </p>

<p>O andamento do projeto pode ser conferido no <a href="https://github.com/cicanci/game-unity-ff">GitHub</a>, e <a href="https://github.com/cicanci/game-unity-ff/tree/8cd709c9bea93b397767636e421b7d2a4c1afce8">neste link</a> você pode ver as alterações no projeto até este post (também sugestão do leitor Felipe). Todos posts desta série sobre meu projeto podem ser vistos na tag <a href="http://gamedeveloper.com.br/tag/final-frontier/">Final Frontier</a>, e como sempre qualquer sugestão ou opinião é bem vinda!</p>]]></content:encoded></item><item><title><![CDATA[Aprenda a Programar com Minecraft]]></title><description><![CDATA[<p><a href="https://minecraft.net/">Minecraft</a> conseguiu criar uma cultura e se tornou muito mais do que apenas um jogo, hoje é usado até na educação de crianças, como pode ser visto no documentário <a href="http://gamedeveloper.com.br/documentario-sobre-minecraft/">Minecraft: The Story of Mojang</a>. Hoje é possível até aprender a programar usando o jogo, e é isso que o livro</p>]]></description><link>http://gamedeveloper.com.br/programar-com-minecraft/</link><guid isPermaLink="false">22c00e3d-7a8b-4ae7-a6bd-e2c94d714a34</guid><category><![CDATA[livros]]></category><dc:creator><![CDATA[Bruno Cicanci]]></dc:creator><pubDate>Thu, 14 Jul 2016 00:45:00 GMT</pubDate><media:content url="http://gamedeveloper.com.br/content/images/2016/07/livro-minecraft-capa.jpg" medium="image"/><content:encoded><![CDATA[<img src="http://gamedeveloper.com.br/content/images/2016/07/livro-minecraft-capa.jpg" alt="Aprenda a Programar com Minecraft"><p><a href="https://minecraft.net/">Minecraft</a> conseguiu criar uma cultura e se tornou muito mais do que apenas um jogo, hoje é usado até na educação de crianças, como pode ser visto no documentário <a href="http://gamedeveloper.com.br/documentario-sobre-minecraft/">Minecraft: The Story of Mojang</a>. Hoje é possível até aprender a programar usando o jogo, e é isso que o livro <a href="http://novatec.com.br/livros/aprenda-programar-minecraft/">Aprenda a Programar com Minecraft</a> do <a href="https://www.nostarch.com/programwithminecraft">Craig Richardson</a> faz de uma maneira incrivelmente didática.</p>

<p>Este livro, lançado no Brasil pela editora <a href="http://novatec.com.br/livros/aprenda-programar-minecraft/">Novatec</a>, ensina lógica de programação utilizando a linguagem Python e usado o jogo Minecraft como ferramenta para exibir os resultados. Ou seja, após cada lição, é possível modificar e testar o que foi ensinado no jogo Minecraft para criar estruturas, blocos, itens, entre outras coisas. </p>

<p><img src="http://gamedeveloper.com.br/content/images/2016/07/livro-minecraft-1.jpg" alt="Aprenda a Programar com Minecraft"></p>

<p>Todas as lições no livro possuem imagens do jogo para mostrar como é o resultado esperado, o que ajuda bastante. Ao invés de aprender a programar em Python utilizando o terminal ou prompt de comando, tudo que é programado pode ser visto no jogo, seja em formato visual (blocos, por exemplo) ou em mensagens de texto na tela do jogo. </p>

<p>O autor já trabalhou na <a href="https://www.raspberrypi.org/">Fundação Raspberry Pi</a>, por isso além de Windows e Mac também é possível seguir o livro utilizando Raspberry Pi. O capítulo inicial do livro ensina a configurar o ambiente de desenvolvimento, inclusive com o Minecraft API e Minecraft Server.</p>

<p>O livro cobre todo básico de programação com Python: variáveis, strings, condicionais, loops, funções, operações básicas de matemática e lógica, estruturas de dados como lista e dicionário, e como salvar o progresso ou estado do jogo em arquivos de texto. Por fim um ótimo capítulo, porém básico, sobre orientação a objetivos com Python, tudo para deixar o leitor com uma vontade de continuar aprendendo a programar e testar seus programas no Minecraft.</p>

<p><img src="http://gamedeveloper.com.br/content/images/2016/07/livro-minecraft-3.jpg" alt="Aprenda a Programar com Minecraft"></p>

<p>Este livro é incrível para quem quer aprender a programar, e o uso do Minecraft é um grande diferencial para incentivar até mesmo crianças e adolescentes a entrarem para o lado negro da força e se tornarem programadores. Dependendo da idade provavelmente é necessário o acompanhamento de um adulto, pelo menos para configurar o computador e fazer os primeiros exercícios, mas depois acho que é possível continuar sozinho.</p>

<p>Após terminar este livro se você quiser continuar estudando desenvolvimento de jogos com Python, com certeza o próximo livro que eu indico é o <a href="http://gamedeveloper.com.br/introducao-jogos-python-pygame/">Introdução ao Desenvolvimento de Jogos em Python com PyGame</a>. Assim você terá toda base necessária para programar jogos em Python, ou pelo menos criar mods mais complexos para Minecraft. É claro que existem diversos livros sobre Python, mas acredito que estes dois são suficientes para iniciar tanto na programação em Python quanto desenvolvimento de jogos.</p>

<p>Muito obrigado a editora Novatec por me enviar este livro. Este livro pode ser adquirido pelo site da <a href="http://novatec.com.br/livros/aprenda-programar-minecraft/">Novatec</a> ou em praticamente qualquer livraria. Recomendo também dar uma olhada no site do autor, <a href="https://www.nostarch.com/programwithminecraft">Craig Richardson</a>, pois tem bastante conteúdo adicional para o livro disponível lá (em Inglês).</p>]]></content:encoded></item><item><title><![CDATA[Final Frontier: Playground e destruição]]></title><description><![CDATA[<p>Este é o segundo post sobre o jogo que estou desenvolvendo no meu tempo livre, o <a href="http://gamedeveloper.com.br/inicio-do-projeto-final-frontier/">Final Frontier</a>. Neste post vou falar sobre como estou usando o playground para descobrir a mecânica do jogo e também como fiz um modelo 3D ser destruído. </p>

<p>O jogo está em desenvolvimento publicamente no</p>]]></description><link>http://gamedeveloper.com.br/final-frontier-playground-e-destruicao/</link><guid isPermaLink="false">bf3efdaa-57db-4db9-9a1b-30e61af54d68</guid><category><![CDATA[final frontier]]></category><dc:creator><![CDATA[Bruno Cicanci]]></dc:creator><pubDate>Wed, 06 Jul 2016 16:40:00 GMT</pubDate><media:content url="http://gamedeveloper.com.br/content/images/2016/07/ff-prototype-2.png" medium="image"/><content:encoded><![CDATA[<img src="http://gamedeveloper.com.br/content/images/2016/07/ff-prototype-2.png" alt="Final Frontier: Playground e destruição"><p>Este é o segundo post sobre o jogo que estou desenvolvendo no meu tempo livre, o <a href="http://gamedeveloper.com.br/inicio-do-projeto-final-frontier/">Final Frontier</a>. Neste post vou falar sobre como estou usando o playground para descobrir a mecânica do jogo e também como fiz um modelo 3D ser destruído. </p>

<p>O jogo está em desenvolvimento publicamente no <a href="https://github.com/cicanci/game-unity-ff">GitHub</a>, então dependendo de quando você ler este post pode ser que muita coisa tenha mudado. Mesmo assim, as dicas aqui podem ser aplicadas em seu projeto. </p>

<p><strong>Como brincar no playground</strong></p>

<p>Como disse no post anterior, o <a href="http://gamedeveloper.com.br/como-ser-um-programador-de-jogos-playground/">playground</a> não é um <a href="http://gamedeveloper.com.br/como-ser-um-programador-de-jogos-prototipos/">protótipo</a>. O playground é usado para experimentar ideias, enquanto o protótipo é usado para validar o gameplay. Por isso, existem algumas boas práticas que eu gosto de seguir aqui.</p>

<p>A primeira dica é deixar bem claro o que pertence ao playground no projeto. Como o playground pode fazer parte do projeto de um protótipo ou da versão final, é comum utilizar scripts e assets de test ou finais no playground. No meu caso eu estou usando este playground antes de iniciar o desenvolvimento do protótipo, então decidi separar prefabs e scripts em uma pasta "Playground". </p>

<p><img src="http://gamedeveloper.com.br/content/images/2016/07/project-organization.png" alt="Final Frontier: Playground e destruição"></p>

<p>Os scripts estão dentro de um namespace chamado "Playground", e quando usados exibem o log de warning abaixo. Este é uma dica que aprendi recentemente lendo a <a href="http://gamedeveloper.com.br/dicas-de-john-romero/">entrevista do John Romero</a>, onde ele fala que é sempre bom exibir na tela o que está acontecendo, principalmente o que não é esperado. Como este projeto deve crescer e ter muitos scripts e prefabs, eu quero ter certeza de que algum prefab com script de playground será esquecido no jogo. </p>

<p><img src="http://gamedeveloper.com.br/content/images/2016/07/playground-warnings.png" alt="Final Frontier: Playground e destruição"></p>

<p>É sempre bom criar opções para debug visual enquanto o projeto está rodando e aproveitando os recursos do editor da Unity. Na imagem abaixo eu criei um <code>Boolean</code> chamado <code>cameraFollow</code> que pode ser habilitado durante a execução para fazer a câmera do jogo deixar de seguir a nave. Eu não coloquei o objeto da câmera dentro da nave para que durante sua movimentação não dê a impressão ser "dura". Isso vai fazer mais sentido quando implementar o controle completo da nave.</p>

<p><img src="http://gamedeveloper.com.br/content/images/2016/07/spaceship-script.png" alt="Final Frontier: Playground e destruição"></p>

<p><strong>Destruindo objetos 3D</strong></p>

<p>Destruição de objetos e cenário é algo que sempre quis implementar mas nunca tive uma oportunidade. Pode parecer algo muito complicado mas na verdade é simples de entender a idéia por trás. Basicamente você tem dois modelos: um normal e um "destruído", e quando o objeto é destruído você substitui pelo modelo destruído e aplica alguma física nos destroços se necessário.</p>

<p><img src="http://gamedeveloper.com.br/content/images/2016/07/blender-block.png" alt="Final Frontier: Playground e destruição"></p>

<p>Como eu quero utilizar apenas ferramentas e assets gratuitos neste projeto, escolhi utilizar o blender para fazer um moledo de um cubo inteiro e um cubo destruído. O video abaixo ensina como fazer isto no blender e como adicionar a física necessária na Unity, mas basicamente você precisa aplicar <code>Cell Fracture</code> com <code>Noise</code> no modelo e importar na Unity adicionando um <code>Mesh Collider</code> em cada pedaço.</p>

<iframe width="640" height="360" src="https://www.youtube.com/embed/videoseries?list=PLbghT7MmckI6FPAZfn2HBdOu-JGSZ39vS" frameborder="0" allowfullscreen></iframe>

<p><strong>Próximos passos</strong></p>

<p>Vou tentar escrever um post sobre este projeto a cada duas semanas. Como costumo publicar um post por semana vou intercalar posts sobre o andamento do projeto com o conteúdo do blog, assim consigo falar do projeto e ainda mostrar técnicas e dicas que estou usando em seu desenvolvimento. Através desta <a href="http://gamedeveloper.com.br/tag/final-frontier">tag</a> você poderá ver todos os posts sobre o projeto.</p>

<p>Fique a vontade para baixar o projeto no <a href="https://github.com/cicanci/game-unity-ff">GitHub</a> e comentar aqui no post suas opiniões e sugestões. Para o próximo post pretendo implementar o controle da nave, spawn de asteroides pelo caminho e mais alguns detalhes no playground. Embora demore duas semanas para eu publicar o próximo post, você pode acompanhar meu trabalho no jogo pelo GitHub, pois sempre que possível vou trabalhar neste projeto durante a semana.</p>]]></content:encoded></item><item><title><![CDATA[Livros para desenvolver jogos - atualizado!]]></title><description><![CDATA[<p>Fazem quase 7 anos que escrevi este <a href="http://gamedeveloper.com.br/livros-de-desenvolvimento-de-jogos/">post</a> com uma lista de livros para desenvolvimento de jogos. Naquela época a lista foi baseada em duas coisas: o conteúdo da pós-graduação que eu estava cursando e o que estava disponível no momento. Felizmente, 7 anos depois, muitos livros novos surgiram e</p>]]></description><link>http://gamedeveloper.com.br/livros-gamedev/</link><guid isPermaLink="false">a9e75b91-02db-4f37-9556-23204e42f07a</guid><category><![CDATA[livros]]></category><dc:creator><![CDATA[Bruno Cicanci]]></dc:creator><pubDate>Thu, 30 Jun 2016 01:32:12 GMT</pubDate><media:content url="http://gamedeveloper.com.br/content/images/2016/06/capa-livros.jpg" medium="image"/><content:encoded><![CDATA[<img src="http://gamedeveloper.com.br/content/images/2016/06/capa-livros.jpg" alt="Livros para desenvolver jogos - atualizado!"><p>Fazem quase 7 anos que escrevi este <a href="http://gamedeveloper.com.br/livros-de-desenvolvimento-de-jogos/">post</a> com uma lista de livros para desenvolvimento de jogos. Naquela época a lista foi baseada em duas coisas: o conteúdo da pós-graduação que eu estava cursando e o que estava disponível no momento. Felizmente, 7 anos depois, muitos livros novos surgiram e alguns foram traduzidos e lançados no Brasil, inclusive fiz <a href="http://gamedeveloper.com.br/tag/livros/">review</a> de grande parte deles.</p>

<p>Não foi só isso que mudou. 7 anos atrás eu ainda não trabalhava com jogos e este blog estava começando, tinha apenas 4 meses de existência e uns 5 posts. Estava na hora de escrever um novo post atualizado com sugestões de livros. Sempre que me perguntam por e-mail ou realizo palestras costumo sugerir a lista abaixo, que na minha opinião muitos são leituras obrigatórias para todo desenvolvedor de jogos. Clique nas imagens para conferir mais detalhes dos livros.</p>

<p><a href="https://amzn.com/B00P5URD96"><img src="http://gamedeveloper.com.br/content/images/2016/06/gpp.jpg" alt="Livros para desenvolver jogos - atualizado!" title=""></a></p>

<p><a href="https://amzn.com/0321940156"><img src="http://gamedeveloper.com.br/content/images/2016/06/gpat.jpg" alt="Livros para desenvolver jogos - atualizado!" title=""></a></p>

<p><a href="https://amzn.com/1556220782"><img src="http://gamedeveloper.com.br/content/images/2016/06/gameai.jpg" alt="Livros para desenvolver jogos - atualizado!" title=""></a></p>

<p><a href="https://amzn.com/1449392512"><img src="http://gamedeveloper.com.br/content/images/2016/06/physics.jpg" alt="Livros para desenvolver jogos - atualizado!" title=""></a></p>

<p><a href="https://amzn.com/0321618521"><img src="http://gamedeveloper.com.br/content/images/2016/06/scrum.jpg" alt="Livros para desenvolver jogos - atualizado!" title=""></a></p>

<p><a href="https://amzn.com/1482217163"><img src="http://gamedeveloper.com.br/content/images/2016/06/gdw3.jpg" alt="Livros para desenvolver jogos - atualizado!" title=""></a></p>

<p><a href="http://loja.grupoa.com.br/livros/serie-microsoft/code-complete/8536305045"><img src="http://gamedeveloper.com.br/content/images/2016/06/codecomplete.jpg" alt="Livros para desenvolver jogos - atualizado!" title=""></a></p>

<p><a href="https://www.blucher.com.br/livro/detalhes/level-up-817"><img src="http://gamedeveloper.com.br/content/images/2016/06/levelup.jpg" alt="Livros para desenvolver jogos - atualizado!" title=""></a></p>

<p><a href="http://loja.grupoa.com.br/livros/gerenciamento-de-projetos/manual-de-producao-de-jogos-digitais/9788540701830"><img src="http://gamedeveloper.com.br/content/images/2016/06/producao.jpg" alt="Livros para desenvolver jogos - atualizado!" title=""></a></p>

<p><a href="http://novatec.com.br/livros/jogos2/"><img src="http://gamedeveloper.com.br/content/images/2016/06/gamedev2.jpg" alt="Livros para desenvolver jogos - atualizado!" title=""></a></p>

<p>Apesar de serem muitos livros, foi difícil deixar alguns de fora desta lista. Provavelmente irei fazer outro lista em um post futuro com mais livros. Comparada com a lista do meu post de 7 anos atrás apenas dois livros permanecera: Game Design Workshop, que ganhou uma nova edição, e Desenvolvimento de Jogos Eletrônicos, que está novamente esgotado. Os últimos quatro livros da lista são em português e estão disponíveis no Brasil, confira as reviews do livro <a href="http://gamedeveloper.com.br/level-up-game-design/">Level Up!</a> e do livro <a href="http://gamedeveloper.com.br/manual-de-producao-de-jogos-digitais/">Produção de Jogos Digitais</a>, os demais estão disponíveis apenas em inglês.</p>

<p>Neste <a href="http://gamedeveloper.com.br/como-ser-um-programador-de-jogos-livros/">post</a> existem mais sugestões de livros em português lançados no Brasil, porém eu recomendo dar uma olhada nos livros em <a href="http://gamedeveloper.com.br/como-ser-um-programador-de-jogos-pre-requisitos/">inglês</a> também. Nesta lista selecionei 10 livros que são bem abrangentes em seus assuntos, porém na próxima lista os livros serão mais específicos para um determinado assunto, como matemática para jogos, game design de jogos de tabuleiro, efeitos sonoros, entre outros.</p>]]></content:encoded></item><item><title><![CDATA[Inicio do projeto Final Frontier]]></title><description><![CDATA[<p>Como eu havia comentado neste <a href="http://gamedeveloper.com.br/nao-vamos-fazer-um-jogo-juntos/">post</a> decidi começar um novo projeto no meu tempo livre e colocar em um repositório público no <a href="https://github.com/cicanci/game-unity-ff">GitHub</a> para quem quiser acompanhar o desenvolvimento do jogo em Unity. Este é o primeiro de uma série de posts que vão contar detalhes sobre o desenvolvimento deste</p>]]></description><link>http://gamedeveloper.com.br/inicio-do-projeto-final-frontier/</link><guid isPermaLink="false">186afc49-6c3a-4c38-85e9-6c60ca588287</guid><category><![CDATA[final frontier]]></category><dc:creator><![CDATA[Bruno Cicanci]]></dc:creator><pubDate>Wed, 22 Jun 2016 23:06:00 GMT</pubDate><media:content url="http://gamedeveloper.com.br/content/images/2016/06/capa-jogos.jpg" medium="image"/><content:encoded><![CDATA[<img src="http://gamedeveloper.com.br/content/images/2016/06/capa-jogos.jpg" alt="Inicio do projeto Final Frontier"><p>Como eu havia comentado neste <a href="http://gamedeveloper.com.br/nao-vamos-fazer-um-jogo-juntos/">post</a> decidi começar um novo projeto no meu tempo livre e colocar em um repositório público no <a href="https://github.com/cicanci/game-unity-ff">GitHub</a> para quem quiser acompanhar o desenvolvimento do jogo em Unity. Este é o primeiro de uma série de posts que vão contar detalhes sobre o desenvolvimento deste projeto, fazendo referências aos posts da série <a href="http://gamedeveloper.com.br/como-ser-um-programador-de-jogos/">como ser um programador de jogos</a>.  Neste post, quero contar um pouco sobre como surgiu a ideia para este projeto e onde quero chegar com ele.</p>

<p>Eu sempre fui um fã de jogos com tema de ficção científica, e entre meus favoritos estão as séries <a href="https://en.wikipedia.org/wiki/Metroid">Metroid</a>, <a href="https://en.wikipedia.org/wiki/StarCraft">Starcraft</a>, <a href="https://en.wikipedia.org/wiki/Halo_(series)">Halo</a>, <a href="https://en.wikipedia.org/wiki/Mass_Effect">Mass Effect</a>, <a href="https://en.wikipedia.org/wiki/Endless_Space">Endless Space</a>, <a href="https://en.wikipedia.org/wiki/Star_Wars:_Knights_of_the_Old_Republic">Star Wars: Knighs of the Old Republic</a> e <a href="https://en.wikipedia.org/wiki/Destiny_(video_game)">Destiny</a>. Até nos jogos de tabuleiro tenho essa preferência pelo tema e gosto muito dos jogos <a href="http://www.ludopedia.com.br/jogo/race-for-the-galaxy">Race for the Galaxy</a>, <a href="http://www.ludopedia.com.br/jogo/roll-for-the-galaxy">Roll for the Galaxy</a>, <a href="http://">Star Trek Catan</a>, <a href="http://www.ludopedia.com.br/jogo/star-realms">Star Realms</a>, e muitos outros que ainda não tenho. E nem preciso falar que sou fã de <a href="http://www.imdb.com/title/tt0076759/?ref_=nv_sr_3">Star Wars</a>, <a href="http://www.imdb.com/title/tt0060028/?ref_=nv_sr_3">Star Trek</a>, <a href="http://www.imdb.com/title/tt0436992/?ref_=nv_sr_1">Doctor Who</a>, <a href="http://www.imdb.com/title/tt0407362/?ref_=tt_rec_tt">Battlestar Galactica</a> e <a href="http://www.imdb.com/title/tt0303461/?ref_=tt_rec_tti">Firefly</a>. Muitos dos meus livros favoritos são dos autores <a href="https://en.wikipedia.org/wiki/Isaac_Asimov">Isaac Asimov</a> e <a href="https://en.wikipedia.org/wiki/Douglas_Adams">Douglas Adams</a>.</p>

<p><img src="http://gamedeveloper.com.br/content/images/2016/06/jogos1.jpg" alt="Inicio do projeto Final Frontier"></p>

<p>Por causa de todas estas referências acima decidi iniciar o desenvolvimento de um jogo de ficção científica. Ainda não defini como o jogo será, por isso iniciei o desenvolvimento de um <a href="http://gamedeveloper.com.br/como-ser-um-programador-de-jogos-playground/">playground</a> para explorar ideias. O playground é um pouco diferente de um <a href="http://gamedeveloper.com.br/como-ser-um-programador-de-jogos-prototipos/">protótipo</a> por que nele o objetivo é a exploração, e não a validação de uma mecânica ou ideia.</p>

<p>Uma coisa eu já defini: quero que tenha uma nave para o jogador pilotar e que exista combates e exploração no espaço. Por isso, iniciei o projeto com um modelo 3D de nave gratuita que baixei na Asset Store da Unity e fiz ela atirar "bolas de ping-pong" em um cubo, enquanto se move. Como estou explorando a mecânica, os scripts utilizados até agora não foram escritos pensando em serem reutilizados no jogo. Outro detalhe definido é o nome do jogo: Final Frontier; uma referência a  <a href="https://en.wikipedia.org/wiki/Where_no_man_has_gone_before">Star Trek</a> e minha homenagem ao <a href="https://en.wikipedia.org/wiki/Leonard_Nimoy">Leonard Nimoy</a>.</p>

<p><img src="http://gamedeveloper.com.br/content/images/2016/06/ff-prototype.jpg" alt="Inicio do projeto Final Frontier"></p>

<p>O meu objetivo é desenvolver todo o protótipo do jogo utilizando a Unity e deixando o projeto público no GitHub, por isso todos recursos e plugins utilizados serão sempre gratuitos e com os devidos créditos adicionados. Se eu decidir que vale a pena investir neste projeto provavelmente irei terminar o desenvolvimento do protótipo e iniciar o desenvolvimento do jogo em um repositório particular, mas isto é algo pra se pensar quando o jogo estiver definido e testado. Durante o desenvolvimento do protótipo pretendo também criar e disponibilizar documentos, como o <a href="http://gamedeveloper.com.br/game-design-document/">Game Design Document</a>.</p>

<p>Qualquer feedback é sempre bem-vindo! E se você não conhece algumas das minhas referências, recomendo dar uma olhada pois vale muito a pena! Ah, a imagem da capa foi tirada em uma partida de Star Trek Catan, tão bom quanto o jogo original.</p>]]></content:encoded></item><item><title><![CDATA[Tutoriais de desenvolvimento de jogos com Unity e Blender]]></title><description><![CDATA[<p>Semana passada estava procurando um video sobre como fazer um FPS com Unity para o projeto que comentei neste <a href="http://gamedeveloper.com.br/nao-vamos-fazer-um-jogo-juntos/">post</a>. Eu já fiz jogos com mecânicas de FPS, porém eu sempre procuro tutoriais sobre o que eu quero fazer para aprender maneiras diferentes de fazer as mesmas coisas.</p>

<p>Está é</p>]]></description><link>http://gamedeveloper.com.br/tutoriais-jogos-unity/</link><guid isPermaLink="false">428d639f-4f8c-4509-930d-8c12911d693f</guid><category><![CDATA[programação]]></category><dc:creator><![CDATA[Bruno Cicanci]]></dc:creator><pubDate>Wed, 15 Jun 2016 21:41:11 GMT</pubDate><media:content url="http://gamedeveloper.com.br/content/images/2016/06/unity3d1.jpg" medium="image"/><content:encoded><![CDATA[<img src="http://gamedeveloper.com.br/content/images/2016/06/unity3d1.jpg" alt="Tutoriais de desenvolvimento de jogos com Unity e Blender"><p>Semana passada estava procurando um video sobre como fazer um FPS com Unity para o projeto que comentei neste <a href="http://gamedeveloper.com.br/nao-vamos-fazer-um-jogo-juntos/">post</a>. Eu já fiz jogos com mecânicas de FPS, porém eu sempre procuro tutoriais sobre o que eu quero fazer para aprender maneiras diferentes de fazer as mesmas coisas.</p>

<p>Está é uma boa dica que gostaria de deixar neste post: mesmo que você saiba fazer algo existe sempre outras maneiras de fazer, que podem ser melhores, iguais ou piores do que a maneira que você costuma fazer. Por isso é muito importante sempre pesquisar na internet, ler livros e assistir videos sobre o assunto, com certeza pelo menos um detalhe novo deve surgir e vai te ajudar.</p>

<p>Voltando ao assunto do post, eu encontrei este canal (em Inglês) chamado <a href="https://www.youtube.com/user/quill18creates">quill18creates</a> com muitos videos sobre desenvolvimento de jogos para Unity e Blender. O autor do canal, <a href="http://quill18.com/">Martin "quill18" Glaude</a>, possui um outro canal com foco jogos chamado <a href="https://www.youtube.com/user/quill18">quill18</a>. </p>

<p>Vou colocar alguns videos que gostei abaixo, porém recomendo dar uma olhada em nos outros videos e <a href="https://www.youtube.com/user/quill18creates/playlists">playlists</a> do canal. As playlists abaixo contém videos sobre geração procedural, algoritmo pathfind para movimentação e objetos destrutíveis, respectivamente.</p>

<iframe width="640" height="360" src="https://www.youtube.com/embed/videoseries?list=PLbghT7MmckI6Tm0jUrhLZG8sEBI1hgCL8" frameborder="0" allowfullscreen></iframe>

<iframe width="640" height="360" src="https://www.youtube.com/embed/videoseries?list=PLbghT7MmckI55gwJLrDz0UtNfo9oC0K1Q" frameborder="0" allowfullscreen></iframe>

<iframe width="640" height="360" src="https://www.youtube.com/embed/videoseries?list=PLbghT7MmckI6FPAZfn2HBdOu-JGSZ39vS" frameborder="0" allowfullscreen></iframe>

<p>Se você conhece outros canais no YouTube sobre desenvolvimento de jogos deixe nos comentários!</p>]]></content:encoded></item><item><title><![CDATA[Como desbloquear o Xbox One para o modo desenvolvedor]]></title><description><![CDATA[<p>Eu não tenho um Xbox One (ainda), mas após a Microsoft <a href="http://www.polygon.com/2016/3/30/11318568/xbox-one-dev-kit">anunciar</a> uma atualização que transformou qualquer Xbox One em um kit de desenvolvimento eu comecei achar interessante a ideia de ter o console para jogar e desenvolver jogos. </p>

<p>Estes são os pré-requisitos para transformar seu console em uma ferramenta</p>]]></description><link>http://gamedeveloper.com.br/xbox-one-modo-dev/</link><guid isPermaLink="false">3461e46a-b631-4c41-8941-cbf551ff0555</guid><category><![CDATA[game dev]]></category><dc:creator><![CDATA[Bruno Cicanci]]></dc:creator><pubDate>Wed, 08 Jun 2016 19:10:51 GMT</pubDate><media:content url="http://gamedeveloper.com.br/content/images/2016/06/XBox-One-Logo-Wallpaper.jpg" medium="image"/><content:encoded><![CDATA[<img src="http://gamedeveloper.com.br/content/images/2016/06/XBox-One-Logo-Wallpaper.jpg" alt="Como desbloquear o Xbox One para o modo desenvolvedor"><p>Eu não tenho um Xbox One (ainda), mas após a Microsoft <a href="http://www.polygon.com/2016/3/30/11318568/xbox-one-dev-kit">anunciar</a> uma atualização que transformou qualquer Xbox One em um kit de desenvolvimento eu comecei achar interessante a ideia de ter o console para jogar e desenvolver jogos. </p>

<p>Estes são os pré-requisitos para transformar seu console em uma ferramenta para desenvolvimento de jogos:</p>

<ul>
<li>Participar do programa <a href="https://insider.windows.com">Windows Insider</a></li>
<li>Ter Windows 10 atualizado no seu computador</li>
<li>Conectar o computador no Xbox One através de um cabo</li>
<li>Instalar a última versão do <a href="https://www.visualstudio.com/en-us/products/vs-2015-product-editions.aspx">Visual Studio 2015</a></li>
<li>Ter pelo menos 30GB de espaço disponível no Xbox One</li>
</ul>

<p>O vídeo abaixo mostra o passo a passo para desbloquear o Xbox One como ferramenta de desenvolvimento, e também esclarece muitas dúvidas em relação a como este processo funciona.</p>

<iframe src="https://channel9.msdn.com/Shows/MarlonLuz/Desbloqueando-o-XBox-One-para-o-modo-desenvolvedor/player?format=html5" width="640" height="360" allowfullscreen frameborder="0"></iframe>

<p>Ainda não tive a oportunidade de testar o <a href="http://www.xbox.com/en-US/xbox-one">Xbox One</a> no modo desenvolvedor, mas assim que eu conseguir pretendo postar mais informações e sobre como funciona a integração com a <a href="http://unity3d.com/pt/">Unity</a>.</p>]]></content:encoded></item><item><title><![CDATA[Não vamos fazer um jogo juntos]]></title><description><![CDATA[<p>Há 4 meses atrás escrevi este <a href="http://gamedeveloper.com.br/vamos-fazer-um-jogo-juntos/">post</a> com uma proposta de fazer um jogo junto com os leitores deste blog que tivessem interesse. Hoje estou escrevendo este post comunicando que este projeto será cancelado.</p>

<p>O objetivo deste projeto era simples: fazer um jogo com ajuda de outras pessoas interessadas. Eu</p>]]></description><link>http://gamedeveloper.com.br/nao-vamos-fazer-um-jogo-juntos/</link><guid isPermaLink="false">1374b142-b408-4a5f-9388-a42cef5b3824</guid><category><![CDATA[meus projetos]]></category><dc:creator><![CDATA[Bruno Cicanci]]></dc:creator><pubDate>Thu, 02 Jun 2016 00:05:00 GMT</pubDate><media:content url="http://gamedeveloper.com.br/content/images/2016/06/cancelado.jpg" medium="image"/><content:encoded><![CDATA[<img src="http://gamedeveloper.com.br/content/images/2016/06/cancelado.jpg" alt="Não vamos fazer um jogo juntos"><p>Há 4 meses atrás escrevi este <a href="http://gamedeveloper.com.br/vamos-fazer-um-jogo-juntos/">post</a> com uma proposta de fazer um jogo junto com os leitores deste blog que tivessem interesse. Hoje estou escrevendo este post comunicando que este projeto será cancelado.</p>

<p>O objetivo deste projeto era simples: fazer um jogo com ajuda de outras pessoas interessadas. Eu configurei o projeto no GitHub pra deixar fácil de todos acompanharem e criei um grupo no Facebook, que depois foi substituído por um grupo no <a href="https://groups.google.com/forum/#!forum/gamedevblog">Google</a>, e o projeto começou.</p>

<p>Esperei 1 mês para começar o projeto, dando este tempo para que outras pessoas pudessem ler o post e entrar no grupo. Comecei organizando meu próprio tempo, e decidi que dedicaria meu tempo livre de segunda-feira para participar deste projeto. No primeiro mês foquei em escrever o <a href="https://docs.google.com/document/d/1oJO44LWsLFr1uZdfcmSFFD5DQI-b-b3nKj4_ICFE5Ho/edit">GDD</a> do projeto e cada semana escrevia um post no grupo informando o que tinha sido feito e quais eram meus objetivos para a próxima semana.</p>

<p>Depois de 1 mês percebi algo que me desanimou: o grupo tinha 50 integrantes, porém nenhum estava interagindo com o projeto. Com excessão de duas pessoas que conversaram comigo sobre o GDD neste período, nada foi feito e eu parei de dedicar meu tempo neste projeto esperando quem algo acontecesse.</p>

<p>Hoje, 4 meses depois, nada aconteceu e eu decidi <strong>cancelar este projeto</strong>. Apaguei o repositório e o quadro no Trello (que praticamente estavam vazios), mas vou deixar o grupo e o GDD por enquanto. </p>

<p>Mas, como eu percebi que existia a vontade de acompanhar o desenvolvimento de um projeto eu comecei um novo jogo e este quero compartilhar com vocês. Por enquanto seu nome é Final Frontier e vai ser um jogo de exploração espacial 3D. O código do projeto está no <a href="https://github.com/cicanci/game-unity-ff">GitHub</a> e pretendo fazer posts comentando sobre o projeto, e até compartilhar o GDD e roadmap do jogo durante seu desenvolvimento.</p>

<p>Muito obrigado a todos pelo apoio, especialmente aos 50 integrantes do grupo que tiveram interesse em participar desde projeto. Eu não queria deixar o projeto em aberto morrendo aos poucos, então decidi acabar com ele logo e começar algo novo para poder compartilhar aqui.</p>

<p>Imagem da capa: <a href="http://www.shutterstock.com/pic-317182457/stock-photo-seal-cancelled-stamped-on-paper-planner.html?src=VkmaZUOTm08LC_DM2NEeGQ-1-0">Seal cancelled</a> do Shutterstock.</p>]]></content:encoded></item><item><title><![CDATA[Crytek lança código da CryEngine no GitHub]]></title><description><![CDATA[<p>A <a href="https://www.cryengine.com/news/looking-ahead-github-and-cryengine">CryEngine</a> já tinha seu código aberto porém, por não ter um instalador, era necessário baixar todo código sempre que algum update era realizado. E o projeto não é pequeno para ser baixado a cada alteração, por isso muitas vezes é comum o desenvolvedor trabalhar com uma versão fixa da</p>]]></description><link>http://gamedeveloper.com.br/crytek-lanca-codigo-da-cryengine-no-github/</link><guid isPermaLink="false">1e0a86bf-fd6a-4dc8-85c4-1e98a1188286</guid><category><![CDATA[notícias]]></category><dc:creator><![CDATA[Bruno Cicanci]]></dc:creator><pubDate>Wed, 25 May 2016 23:55:00 GMT</pubDate><media:content url="http://gamedeveloper.com.br/content/images/2016/06/cryengine.jpg" medium="image"/><content:encoded><![CDATA[<img src="http://gamedeveloper.com.br/content/images/2016/06/cryengine.jpg" alt="Crytek lança código da CryEngine no GitHub"><p>A <a href="https://www.cryengine.com/news/looking-ahead-github-and-cryengine">CryEngine</a> já tinha seu código aberto porém, por não ter um instalador, era necessário baixar todo código sempre que algum update era realizado. E o projeto não é pequeno para ser baixado a cada alteração, por isso muitas vezes é comum o desenvolvedor trabalhar com uma versão fixa da engine sem atualizar durante todo o projeto.</p>

<p>Agora que seu <a href="https://github.com/CRYTEK-CRYENGINE/CRYENGINE">código</a> está no GitHub, e não é mais um ZIP no site, desenvolvedores podem manter o código sempre atualizado, baixando apenas as atualizações do repositório. </p>

<p>Seria bom a Amazon fazer algo semelhante para a sua engine <a href="https://aws.amazon.com/pt/lumberyard/">Lumberyard</a>, que foi construída em cima da CryEngine. Embora exista uma ferramenta de update, não é muito claro o que foi alterado. Em projetos de código aberto isto é muito importante.</p>

<p>A <a href="https://github.com/EpicGames/UnrealEngine">Unreal Engine</a> também está disponível no GitHub, e possui a mesma vantagem para os desenvolvedores terem seu código atualizado. </p>

<p>Na minha opinião isto é algo que <a href="http://unity3d.com/pt/get-unity">Unity</a> deve fazer logo, não abrir seu código necessariamente, mas ter um update melhor do que fazer o desenvolvedor baixar quase 10GB todo mês pra manter a engine atualizada para todas plataformas. </p>]]></content:encoded></item><item><title><![CDATA[Aprenda game design jogando Super Mario 64]]></title><description><![CDATA[<p>O site <a href="http://www.polygon.com/2016/5/16/11683934/super-mario-64-pannenkoek2012-videos-rng">Polygon</a> publicou uma notícia sobre um canal do <a href="https://www.youtube.com/user/pannenkoek2012/videos">YouTube</a> onde o autor cria videos ensinando técnicas de game design enquanto joga Super Mario 64.</p>

<p>O jogo lançado para o <a href="https://en.wikipedia.org/wiki/Super_Mario_64">Nintendo 64</a> e criado pela lenda vida <a href="https://en.wikipedia.org/wiki/Shigeru_Miyamoto">Shigeru Miyamoto</a> possui tantos detalhes que normalmente passam despercebidos, mas se retirarmos</p>]]></description><link>http://gamedeveloper.com.br/aprenda-game-design-jogando-super-mario-64/</link><guid isPermaLink="false">ed35c488-2e51-4cb9-9f88-90fac088e8d7</guid><category><![CDATA[game design]]></category><dc:creator><![CDATA[Bruno Cicanci]]></dc:creator><pubDate>Wed, 18 May 2016 23:31:00 GMT</pubDate><media:content url="http://gamedeveloper.com.br/content/images/2016/06/smb64.jpg" medium="image"/><content:encoded><![CDATA[<img src="http://gamedeveloper.com.br/content/images/2016/06/smb64.jpg" alt="Aprenda game design jogando Super Mario 64"><p>O site <a href="http://www.polygon.com/2016/5/16/11683934/super-mario-64-pannenkoek2012-videos-rng">Polygon</a> publicou uma notícia sobre um canal do <a href="https://www.youtube.com/user/pannenkoek2012/videos">YouTube</a> onde o autor cria videos ensinando técnicas de game design enquanto joga Super Mario 64.</p>

<p>O jogo lançado para o <a href="https://en.wikipedia.org/wiki/Super_Mario_64">Nintendo 64</a> e criado pela lenda vida <a href="https://en.wikipedia.org/wiki/Shigeru_Miyamoto">Shigeru Miyamoto</a> possui tantos detalhes que normalmente passam despercebidos, mas se retirarmos eles o jogo perde um pouco do seu brilho. São estes detalhes que o canal <a href="https://www.youtube.com/user/pannenkoek2012/videos">pannenkoek2012</a> busca exemplificar e ensinar. </p>

<p>Eu selecionei dois videos que eu gostei, mas eu recomendo dar uma olhada nos demais videos do <a href="https://www.youtube.com/user/pannenkoek2012/videos">canal</a>.</p>

<iframe width="560" height="315" src="https://www.youtube.com/embed/MiuLeTE2MeQ" frameborder="0" allowfullscreen></iframe>

<iframe width="560" height="315" src="https://www.youtube.com/embed/kpk2tdsPh0A" frameborder="0" allowfullscreen></iframe>

<p>Se você quiser ler mais sobre o quão incrível o Super Mario 64 é, dê uma lida nesta <a href="http://br.ign.com/super-mario-64-n64-1/8184/feature/entenda-a-genialidade-de-super-mario-64">matéria</a> do IGN.</p>]]></content:encoded></item><item><title><![CDATA[Dicas de John Romero para desenvolver jogos]]></title><description><![CDATA[<p><a href="https://twitter.com/romero">John Romero</a>, co-fundador da <a href="http://www.idsoftware.com/">Id Software</a> e criador dos jogos DOOM e Quake, entre muitos <a href="https://en.wikipedia.org/wiki/John_Romero#Games">outros</a>, deu uma palestra em um evento da revista britânica <a href="http://www.develop-online.net/news/john-romero-s-secrets-of-success-no-prototypes-great-tools-default-bagels/0219747">Develop</a> e falou sobre algumas técnicas para desenvolvimento que ele sempre usou, muitas indo contra ao que encontramos nos livros. Abaixo estão algumas frases que</p>]]></description><link>http://gamedeveloper.com.br/dicas-de-john-romero/</link><guid isPermaLink="false">6b87fcfa-61e0-4120-a0ad-017f6a68900b</guid><category><![CDATA[game dev]]></category><dc:creator><![CDATA[Bruno Cicanci]]></dc:creator><pubDate>Wed, 11 May 2016 22:38:00 GMT</pubDate><media:content url="http://gamedeveloper.com.br/content/images/2016/06/romero.jpg" medium="image"/><content:encoded><![CDATA[<img src="http://gamedeveloper.com.br/content/images/2016/06/romero.jpg" alt="Dicas de John Romero para desenvolver jogos"><p><a href="https://twitter.com/romero">John Romero</a>, co-fundador da <a href="http://www.idsoftware.com/">Id Software</a> e criador dos jogos DOOM e Quake, entre muitos <a href="https://en.wikipedia.org/wiki/John_Romero#Games">outros</a>, deu uma palestra em um evento da revista britânica <a href="http://www.develop-online.net/news/john-romero-s-secrets-of-success-no-prototypes-great-tools-default-bagels/0219747">Develop</a> e falou sobre algumas técnicas para desenvolvimento que ele sempre usou, muitas indo contra ao que encontramos nos livros. Abaixo estão algumas frases que retirei do texto, a notícia completa pode ser lida aqui.</p>

<blockquote>
  <p>“No prototypes,” he said. “Just make the game. Polish as you go. Don’t depend on polish happening later. Always maintain constantly shippable code.</p>
</blockquote>

<p>Tradução:</p>

<blockquote>
  <p>"Sem protótipos", ele disse. "Apenas crie o jogo. Faça polimento durante o projeto. Não conte com o polimento acontecendo mais tarde. Sempre tenha código pronto para ser lançado."</p>
</blockquote>

<p>Na continuação do texto ele fala que se existe muito dinheiro e pessoas envolvidas, que provavelmente haverá um protótipo, mas quando se é pequeno e independente (como ele era). Segundo Romero, o melhor é sempre desenvolver algo final ao invés do ciclo que normalmente inicia com um protótipo, que então é descartado para desenvolver o jogo, e após o desenvolvimento estar completo entra na fase de polimento.</p>

<p>Isso faz muito sentido quando pensamos em empresas pequenas e independentes, mas é claro que existe um risco da equipe desenvolver um jogo se que muitas perguntas importantes tenham sido respondidas na fase de protótipo. Acho que se o game designer tem experiência, e o jogo está bem claro para a equipe, este é um risco que pode ser tomado. Muitas vezes não há tempo suficiente para fazer um protótipo, por isso é comum mesmo as empresas partirem para o jogo final desde o começo.</p>

<blockquote>
  <p>“As soon as you see a bug, you fix it. Do not continue on. If you don’t fix your bugs, your new code will be built on a buggy codebase and ensure an unstable foundation.”</p>
</blockquote>

<p>Tradução:</p>

<blockquote>
  <p>"Ao encontrar um bug, corrija-o. Não continue o desenvolvimento. Se você não corrigir seus bugs, you novo código será escrito em cima de um projeto com problemas e resultando em uma base instável para o jogo"</p>
</blockquote>

<p>Romero diz que não devemos perder o tempo de outras pessoas, se você encontrou um bug ele deve ser corrigido antes de prosseguir. É comum o programador saber que existem bugs mas envia o jogo para a equipe de testes sem falar nada, esperando que eles encontrem para ele corrigir após o bug ser "oficial" e estar anotado em algum lugar.</p>

<p>Novamente, esta é uma dica para pequenas empresas, pois não possuem processos burocráticos. Mas, independente do tamanho da empresa e do projeto, todo bug deve ser sempre corrigido, especialmente se for seu. Ou, se não houver tempo, pelo menos informe a equipe de testes (ou a pessoa que vai testar).</p>

<blockquote>
  <p>“Write your code for this game only – not for a future game. You’re going to be writing a new code later because you’ll be smarter.”</p>
</blockquote>

<p>Tradução:</p>

<blockquote>
  <p>"Escreve seu código para este jogo apenas - não para jogos futuros. Você irá escrever um código novo depois pois você terá aprendido mais"</p>
</blockquote>

<p>Muitos programadores, não só da área de games, se preocupam em fazer um código que poderá ser utilizado por vários projetos depois. Isto é uma preocupação válida, mas quando não se tem muito tempo não devemos nos preocupar em criar um framework antes de criar o jogo em si. E a segunda parte que ele disse é verdade, provavelmente você irá escrever um código melhor na segunda vez.</p>

<p>Em empresas grandes existem até equipes desenvolve ferramentas e frameworks para que as equipes que desenvolvem os jogos consigam focar em fazer o jogo. </p>

<p>O <a href="http://www.develop-online.net/news/john-romero-s-secrets-of-success-no-prototypes-great-tools-default-bagels/0219747">texto</a> contém mais detalhes e dicas, e vale muito a pena ler. John Romero é um grande game designer, e sempre podemos aprender muito com desenvolvedores experientes como ele.</p>]]></content:encoded></item><item><title><![CDATA[Vamos falar sobre salário]]></title><description><![CDATA[<p>Este é um assunto bem complicado no Brasil pois, com tantas pessoas querendo trabalhar com desenvolvimento de jogos, muitas empresas se aproveitam disso e oferecem salários baixos.</p>

<p>Vou focar este post na área de programação, pois é mais fácil pra mim dar exemplos. É bem comum um programador de jogos</p>]]></description><link>http://gamedeveloper.com.br/vamos-falar-sobre-salario/</link><guid isPermaLink="false">ce517b39-bfc9-4fe1-8119-0dc1dfb0c322</guid><category><![CDATA[game dev]]></category><dc:creator><![CDATA[Bruno Cicanci]]></dc:creator><pubDate>Wed, 04 May 2016 17:24:00 GMT</pubDate><media:content url="http://gamedeveloper.com.br/content/images/2016/05/salary.jpg" medium="image"/><content:encoded><![CDATA[<img src="http://gamedeveloper.com.br/content/images/2016/05/salary.jpg" alt="Vamos falar sobre salário"><p>Este é um assunto bem complicado no Brasil pois, com tantas pessoas querendo trabalhar com desenvolvimento de jogos, muitas empresas se aproveitam disso e oferecem salários baixos.</p>

<p>Vou focar este post na área de programação, pois é mais fácil pra mim dar exemplos. É bem comum um programador de jogos ganhar menos do que um analista de sistema, mesmo tendo mais anos de experiência. Para deixar isso mais simples, não estou comparando conhecimento individual, mas sim anos de experiência pois é a primeira coisa que muitas empresas olham no currículo.</p>

<p>Em 2008 terminei minha graduação em Ciência da Computação, e no começo de 2009 comecei minha pós-graduação em Produção e Programação de Games. Antes de eu trabalhar com jogos sempre fui analista de sistemas, e com 3 anos de experiência em programação meu salário bruto na época era R$4.000 para um cargo júnior, um excelente salário para um recém formado.</p>

<p>2 anos depois disso, quando estava terminando minha pós-graduação (só faltava o TCC) e com 5 anos de experiência como programador, consegui meu primeiro emprego na área de jogos na <a href="http://glu.com">Glu Mobile</a> (que fechou o estúdio daqui em 2011) para ganhar um salário de R$3.000 como programador de nível intermediário. Ou seja, por vontade de trabalhar com jogos abri mão de um salário maior, o que normalmente acontece com todo programador que trabalhou com sistemas antes de ser programador de jogos.</p>

<p>Mais tarde, 1 ano depois, aceitei o mesmo salário para trabalhar na <a href="http://ea.com">Electronic Arts</a> (que fechou o estúdio daqui em 2013), ocupando o mesmo cargo de nível intermediário que estava na Glu Mobile. Estava ganhando pouco, porém estava na área de jogos e em uma empresa muito grande lá fora. Nesta época estava com quase 6 anos de experiência, com uma graduação e uma pós-graduação, ganhando menos do que quando eu tinha acabado de me formar. Porém, nunca estive mais feliz. </p>

<p>É muito difícil acertar de primeira o curso e a carreira que realmente queremos, e eu tive a sorte de fazer a escolha correta cursando Ciência da Computação e me especializando em games. O grande problema é que muitas empresas de jogos sabem que trabalhar com games é o sonho de muita gente, por isso exigem um grande conhecimento na área e pagam salários bem baixos. É claro que isto não se aplica a todas empresas, muitas simplesmente não podem pagar salários altos por serem pequenas.</p>

<p>É indiscutível que, aqui no Brasil, um analista de sistemas com 6 anos de experiência tem um salário bem maior (praticamente o dobro) do que um programador de jogos com o mesmo tempo de experiência. Por isso é bem comum dizer que quem trabalha com jogos no Brasil é por que realmente ama o que faz, pois há mais vagas para se trabalhar como analista do que programador de jogos e que geralmente pagam mais.</p>

<p>Os exemplos que dei aqui foram todos com valor para contratação CLT. É bem comum empresas de jogos contratarem como PJ, pois é vantajoso para a empresa e também o salário oferecido pode ser maior do que CLT (mas sem benefícios). Infelizmente esta é a realidade de quem trabalhar com jogos no Brasil. Mesmo meus exemplos sendo de alguns anos atrás, a única coisa que mudou hoje é que temos ainda menos empresas para trabalhar por aqui.</p>

<p>Imagem da capa: <a href="http://www.shutterstock.com/pic-289507745/stock-vector-salary-variation-flat-design-business-concept-cartoon-illustration.html?src=NakHlovtgWQyzSUfdkrtcg-1-6">Salary variation</a> do Shutterstock.</p>]]></content:encoded></item><item><title><![CDATA[Posicionamento da Abragames sobre resolução da Anatel]]></title><description><![CDATA[<p>Acredito que a maioria dos usuários de internet no Brasil já está sabendo da ideia ridícula de algumas empresas de <a href="http://gizmodo.uol.com.br/usuarios-criticam-limite-internet-fixa/">limitar a internet</a> e cobrar para que o usuário continue navegando, transformando o modelo de cobrança da internet fixa no modelo de cobrança de internet móvel.</p>

<p>E, é claro, sempre</p>]]></description><link>http://gamedeveloper.com.br/posicionamento-da-abragames-sobre-resolucao-da-anatel/</link><guid isPermaLink="false">a726b643-e1db-4de3-af48-76c475d61e8b</guid><category><![CDATA[notícias]]></category><dc:creator><![CDATA[Bruno Cicanci]]></dc:creator><pubDate>Thu, 28 Apr 2016 02:58:15 GMT</pubDate><media:content url="http://gamedeveloper.com.br/content/images/2016/04/shutterstock_112158140-1.jpg" medium="image"/><content:encoded><![CDATA[<img src="http://gamedeveloper.com.br/content/images/2016/04/shutterstock_112158140-1.jpg" alt="Posicionamento da Abragames sobre resolução da Anatel"><p>Acredito que a maioria dos usuários de internet no Brasil já está sabendo da ideia ridícula de algumas empresas de <a href="http://gizmodo.uol.com.br/usuarios-criticam-limite-internet-fixa/">limitar a internet</a> e cobrar para que o usuário continue navegando, transformando o modelo de cobrança da internet fixa no modelo de cobrança de internet móvel.</p>

<p>E, é claro, sempre da pra deixar uma situação pior ou mais ridícula. O presidente da Anatel, a agência reguladora de serviços de telecomunicação, deu uma declaração infeliz em uma coletiva de imprensa onde ele demonstrou ser desinformado, segregador e preconceituoso em relação aos video games. A Abragames fez uma carta com seu posicionamento sobre o assunto, e eu achei tão esclarecedora e importante para nossa pequena indústria que decidi publicar aqui na integra. </p>

<blockquote>
  <p>A <a href="http://www.abragames.org">Abragames</a>, Associação Brasileira das Desenvolvedoras de Jogos Eletrônicos, vem, por meio desta, manifestar seu posicionamento contrário ao movimento feito pela Anatel para permitir que operadoras limitem e cortem o uso de dados em conexões de banda larga no Brasil e, mais ainda, vem tornar público sua condenação às declarações do Presidente da Anatel, Sr. João Rezende, de culpar os games e seus jogadores pela medida.</p>
  
  <p>No dia 18 de abril de 2016, em entrevista coletiva dada em Brasília, Rezende declarou: "A gente sabe o que acontece principalmente com games online, né? Tem gente que adora, fica jogando né? O tempo inteiro, e isso gasta um volume de banda muito grande. É evidente que algum tipo de equilíbrio há de se ter porque, senão, nós teremos o consumidor que consome menos pagando por aqueles que estão consumindo mais”.</p>
  
  <p>Veja o vídeo com a declaração:</p>
  
  <iframe width="560" height="315" src="https://www.youtube.com/embed/K4hGLPBq5MY" frameborder="0" allowfullscreen></iframe>
  
  <p>Em <strong>primeiro lugar</strong>, a limitação e o corte prejudicarão diretamente todos os pequenos estúdios de desenvolvimento de games, maioria no Brasil e na Abragames. Uso de internet e transferência de grande volume de dados é parte corriqueira do trabalho com desenvolvimento de jogos. Limitar isso trará, na melhor das hipóteses, aumento nos custos fixos diretos das desenvolvedoras. E, no pior dos casos, impossibilidade de desenvolver seus projeto com a infra-estrutura adequada - especialmente para competir no mercado global. A Abragames condena veementemente uma medida que prejudique o trabalho de suas associadas.</p>
  
  <p>Em <strong>segundo lugar</strong>, não é o papel da Anatel julgar quem faz o quê com sua banda contratada. Segundo seu próprio site, “A missão da Anatel é promover o desenvolvimento das telecomunicações do País de modo a dotá-lo de uma moderna e eficiente infraestrutura de telecomunicações, capaz de oferecer à sociedade serviços adequados, diversificados e a preços justos, em todo o território nacional”. Não existe qualquer menção sobre mensurar e avaliar o que os cidadãos fazem com seus dados contratados. Fica claro que o posicionamento com relação a jogar é inadequado e fora da alçada da Agência reguladora. Entendemos que qualquer um pode fazer o uso que bem entender de seu acesso à internet, desde que dentro da lei. </p>
  
  <p>Em <strong>terceiro lugar</strong>, o conteúdo da fala e o tom utilizado levantam preocupações com uma série de conceitos que condenamos: <strong>preconceito</strong>, <strong>segregação</strong> e <strong>desinformação</strong>.</p>
  
  <p>Há uma preocupação com <strong>Preconceito</strong> pois tal tipo de tom (“Tem gente que adora, fica jogando né?”) trata quem adora jogar como se fosse menor de alguma maneira, como se jogar não fosse uma forma de entretenimento tão válida quanto qualquer outra. Além de se mostrar retrógrado e limitado, tal raciocínio demonstra que, aparentemente, a Anatel não observa que jogos, hoje, são uma mídia de popularidade incontestável. O Brasil é o 11º mercado de games em faturamento, segundo pesquisa. E vale registrar que quem joga no celular também se encaixa no critério “adora, fica jogando”, e já são mais de 154 milhões de smartphones no Brasil.</p>
  
  <p>Condenamos caminhos de <strong>Segregação</strong> pois é absurda e sem sentido a divisão entre “jogadores” e “não-jogadores”, que pode tornar quem joga uma espécie de bode expiatório bizarro das decisões impopulares e que ferem os direitos do consumidor e o Marco Civil da Internet. “A Anatel parece se esquecer que nenhuma norma ou resolução institucional pode ser contrária ao que define a legislação”, disse Claudio Lamachia, presidente da OAB, à Folha de S. Paulo. Colocar a culpa no comportamento e uso de banda dos jogadores é vergonhoso, inadmissível e, claro, foge completamente do escopo das funções da Anatel.</p>
  
  <p>E buscamos sempre evitar a <strong>Desinformação</strong>: ficar jogando por muito tempo não gasta toda esta banda que a declaração dá a entender. Jogar online usa menos banda do que assistir ao Youtube, ao Netflix, Apple TV ou qualquer outro serviço de streaming de vídeos durante o mesmo período de tempo. O que gasta mais banda é fazer download de jogos grandes – assim como baixar filmes em Alta Definição, softwares complexos ou qualquer arquivo grande em termos de MB/GB. Não é “ficar jogando” que gasta banda. Há aqui uma matéria interessante (em inglês) sobre o assunto, explorando os usos de banda para finalidades comuns.</p>
  
  <p>Em <strong>quarto lugar</strong>, ao endossar a limitação do uso de dados e ser conivente com a possibilidade de corte do serviço desde que o usuário seja avisado, a Anatel assume um posicionamento favorável à maior exploração do consumidor; dificulta o acesso livre à internet, suas informações e todos os seus benefícios; e ignora o efeito de longo prazo que este tipo de política pode ter na construção de um país educado, informado, atual e competitivo. Assim, não faz o papel que lhe cabe: defesa dos cidadãos e dos interesses do país, contrariando sua própria missão ao permitir uma prestação de serviço inadequada às necessidades da população.</p>
  
  <p>Importante registrar que, embora a medida de adiar por 90 dias a ação proposta tenha soado como uma vitória de quem defende uma internet ilimitada e livre, o presidente da Anatel foi bastante claro ao afirmar que “A regulamentação da Anatel autoriza a cobrança e limite de franquia”.</p>
  
  <p>Em <strong>quinto lugar</strong>, afirmar que o consumidor que consome menos vai pagar por aqueles que estão consumindo mais é uma técnica retórica bastante discutível, que parte do princípio que existe um número finito de dados a ser consumido de modo compartilhado pelos usuários. Este não é o combinado com o consumidor.</p>
  
  <p>Além disso, existem planos com velocidades diferentes – e cada um assina o que melhor lhe convier. Ninguém ”usa” dados do outro desde que as operadoras cumpram o que prometem na venda. Vale registrar que a norma em vigor da Anatel já é maleável com as velocidades: hoje, a garantia mínima de velocidade que as operadoras devem assegurar é de 40% da velocidade contratada. A média deve ser 80% da velocidade contratada, segundo informações da própria Anatel.</p>
  
  <p>Assim, a Abragames reforça seu posicionamento favorável a uma internet livre e neutra, que permita não só jogar, mas também se comunicar, informar-se, produzir e consumir conteúdos de todas as mídias, e o que mais for interessante para cada pessoa, sempre respeitando a liberdade individual e as leis em vigor.</p>
  
  <p>Embora outros países pratiquem o modelo com limitação de dados, entendemos que é um modelo péssimo para ser seguido no Brasil, onde a internet pode e deve desempenhar um papel crucial no progresso e aumento da competitividade de setores estratégicos – desenvolvimento de jogos, inclusive – no contexto mundial.</p>
  
  <p>Concluímos reforçando que as palavras proferidas no sentido de isolar os jogos das demais formas de consumo de banda na internet e colocá-los como culpados pela medida de limitar a banda são lamentáveis e equivocadas. Discordamos e defenderemos com firmeza o direito de uso da internet no Brasil para jogar e desenvolver jogos – bem como para todos os outros fins para os quais a internet pode se destinar.</p>
  
  <p>São Paulo, 22 de Abril de 2016</p>
  
  <p>Diretoria Abragames</p>
  
  <p>Gestão 2016-2018</p>
</blockquote>

<p>Imagem da capa: <a href="http://www.shutterstock.com/pic-112158140/stock-photo-best-internet-concept-of-global-business-from-concepts-series.html?src=d7FQJp0dRVBW0qloikauMA-1-8">Best internet concept</a> do Shutterstock.</p>]]></content:encoded></item><item><title><![CDATA[Minha participação no Ludum Dare #35]]></title><description><![CDATA[<p>Esta foi minha quarta participação na game jam <a href="http://ludumdare.com/compo/ludum-dare-35/?action=preview&amp;uid=52021">Ludum Dare</a>, e pela quarta vez consegui terminar o jogo em 48 horas, o <a href="http://ludumdare.com/compo/ludum-dare-35/?action=preview&amp;uid=52021">Metaforce</a>. Porém, isto não quer dize que o jogo saiu do jeito que planejei ou que tenha ficado bom, apenas terminei o que comecei.</p>

<p>Em cada edição eu</p>]]></description><link>http://gamedeveloper.com.br/ludum-dare-35/</link><guid isPermaLink="false">76a52c8d-ef18-4b93-b0b5-7c1022ee4df3</guid><category><![CDATA[meus projetos]]></category><category><![CDATA[ludum dare]]></category><dc:creator><![CDATA[Bruno Cicanci]]></dc:creator><pubDate>Wed, 20 Apr 2016 17:28:00 GMT</pubDate><media:content url="http://gamedeveloper.com.br/content/images/2016/04/screenshot02.jpg" medium="image"/><content:encoded><![CDATA[<img src="http://gamedeveloper.com.br/content/images/2016/04/screenshot02.jpg" alt="Minha participação no Ludum Dare #35"><p>Esta foi minha quarta participação na game jam <a href="http://ludumdare.com/compo/ludum-dare-35/?action=preview&amp;uid=52021">Ludum Dare</a>, e pela quarta vez consegui terminar o jogo em 48 horas, o <a href="http://ludumdare.com/compo/ludum-dare-35/?action=preview&amp;uid=52021">Metaforce</a>. Porém, isto não quer dize que o jogo saiu do jeito que planejei ou que tenha ficado bom, apenas terminei o que comecei.</p>

<p>Em cada edição eu consigo acertar e errar em muitos detalhes, e desta vez não foi diferente. Vou contar um pouco sobre cada parte do projeto aqui, e o que deu certo e errado.</p>

<h3 id="programao">Programação</h3>

<p>O que tinha grandes chances de ser meu maior erro acabou dando muito certo. Nas edições anteriores escolhi utilizar a Unity, pois é uma engine que estou acostumado e tenho mais experiência. Desta vez decidi utilizar algo diferente, e escolhi a <a href="http://www.defold.com/">Defold</a>, uma engine que nunca nem sequer fiz um tutorial. Mais arriscado ainda foi que esta engine foi lançada publicamente mês passado, e apesar de estar em desenvolvimento há anos internamente na King, é algo novo. Tão novo que se não fosse a excelente documentação e exemplos, não seria possível utilizar pois não há muita coisa no Google além do forum deles. </p>

<p><img src="http://gamedeveloper.com.br/content/images/2016/04/screenshot01.jpg" alt="Minha participação no Ludum Dare #35"></p>

<p>Mas o que pareceu arriscado acabou dando muito certo. A Defold é uma engine incrível, com tudo que você precisa para desenvolver um jogo. É claro que ela possui defeitos e muita coisa para melhorar, principalmente a IDE interna para programar em Lua, mas não deixou a desejar durante o Ludum Dare. </p>

<p><img src="http://gamedeveloper.com.br/content/images/2016/04/screenshot02-1.jpg" alt="Minha participação no Ludum Dare #35"></p>

<p>Minha primeiro contato com esta engine foi duas horas antes de anunciarem o tema e começar o Ludum Dare, e achei tão simples que mesmo sem experiência decidi utilizar a Defold. Acho que por eu ter experiência com outras tecnologias, eu mais ou menos sabia onde estava ou como usar o que eu queria, o que me provou que a Defold é realmente uma excelente ferramenta de desenvolvimento e me lembrou de algumas ferramentas que utilizei quando trabalhava na EA.</p>

<h3 id="arte">Arte</h3>

<p>Apesar da Defold ter sido uma boa surpresa durante meu fim de semana, acho que nada vai se comparar com a arte que fiz para jogo. Por que? Por que foi a primeira vez na minha vida que eu desenhei algo no PC e foi a primeira vez que tentei fazer pixel art. Só tive tempo de desenhar os personagens, mas isso já foi mais do que jamais fiz.</p>

<p><img src="http://gamedeveloper.com.br/content/images/2016/04/knight.jpg" alt="Minha participação no Ludum Dare #35"></p>

<p>Quando o tema <em>Shapeshit</em> foi anunciado logo pensei em fazer um jogo onde o jogador controla um personagem que quando ataca um monstro ele se divide, ou quando dois monstros se colidem eles se juntam em um. Então logo percebi que eu iria precisar de um personagem e um monstros, sendo que o monstro teria que ter duas formas (grande e pequeno) e cores diferentes (azul, vermelho e roxo para quando se juntarem com cores diferentes). </p>

<p><img src="http://gamedeveloper.com.br/content/images/2016/04/monsters.jpg" alt="Minha participação no Ludum Dare #35"></p>

<p>Pesquisei algumas artes de jogos de Atari para usar como referência, e no final o desenho do meu personagem me lembrou um pouco <a href="http://www.castlecrashers.com/">Castle Crashers</a>. Para fazer os monstros eu não usei referencias, mas no final lembrou um pouco um <a href="http://minecraft.gamepedia.com/Creeper">Creeper</a> com cores diferentes. Até consegui fazer posições diferentes do personagem para o personagem atacar, ficar parado e tomar dano (andar fica pra próxima).</p>

<h3 id="gamedesign">Game Design</h3>

<p>Percebeu a minha empolgação em usar a Defold e ter conseguido desenhar meus primeiros personagens? Então, isso me fez praticamente esquecer algo muito importante: o game design do jogo. Na tarde de domingo, poucas horas antes do final do Ludum Dare, eu já tinha tudo que queria pronto: mapa criado com tiles, colisões funcionando (precisam de ajustes ainda, mas funcionam), personagem andando, atacando e tomando dano, contador de vida no personagem, contador de vida nos monstros, 2 cores de monstros que se juntavam em uma terceira cor, 2 tamanhos de monstro que se combinavam.</p>

<p><img src="http://gamedeveloper.com.br/content/images/2016/04/screenshot04.jpg" alt="Minha participação no Ludum Dare #35"></p>

<p>O problema foi que eu estava tão preocupado em terminar estas coisas listadas acima que não pensei em como juntar. Foi como se eu tivesse criado diferentes peças de Lego mas no final não sabia bem o que fazer com elas. Com pouco tempo e ainda alguns ajustes pra fazer acabei apenas adicionando um contador de pontos, sendo que monstros básicos davam 1 ponto e monstros transformados davam 2 pontos, e uma saída no final do mapa. Além disso, gravei uma música curta no violão usando meu celular e coloquei pra repetir. Por ter pouco tempo a música não ficou boa, mas pelo menos o jogo não ficou sem silêncio.</p>

<p><img src="http://gamedeveloper.com.br/content/images/2016/04/screenshot03.jpg" alt="Minha participação no Ludum Dare #35"></p>

<p>O resultado foi o jogo mais "complexo" que já desenvolvi no Ludum Dare, com muitas coisas legais, porém não ficou divertido por falta de pensar no game design. Nas edições anteriores eu sempre comecei com um papel e lápis pensando no game design, mas desta vez fiquei tão empolgado em usar a engine pela primeira vez e por ter conseguido desenhar que deixei isso de lado, e o jogo não ficou divertido.</p>

<p><img src="http://gamedeveloper.com.br/content/images/2016/04/map-1.jpg" alt="Minha participação no Ludum Dare #35"></p>

<p>Outra mudança foi que não exportei o jogo para mobile, embora esteja rodando muito bem no Android. Mas adicionei suporte a teclado e controle, inclusive com duas opções: controle do Xbox 360 e Steam Controller (um pouco bugado, mas funciona). Também não tive tempo de fazer uma tela de menu com o nome do jogo, mas isso eu sempre deixo por último por não influenciar a mecânica do jogo.</p>

<h3 id="concluso">Conclusão</h3>

<p>Para conseguir fazer um jogo legal em game jams como o Ludum Dare é preciso ter um bom balanceamento entre Programação, Arte (incluindo Som) e Game Design. Claro que fazer um jogo sozinho em 48 horas baseado em um tema que é revelado no início da contagem é desafiador o bastante para causa um desequilíbrio em todas as áreas. Nas edições anteriores sempre a arte ficou de lado, e dessa vez foi o game design. Espero que na próxima edição em Agosto eu consigo encontrar um equilíbrio melhor.</p>

<p>O nome do jogo, <a href="http://ludumdare.com/compo/ludum-dare-35/?action=preview&amp;uid=52021">Metaforce</a>, foi dado pela minha namorada, que ficou do meu lado brincando com meu cachorro Spock enquanto eu desenvolvia este jogo. <a href="https://www.youtube.com/watch?v=85gejBOjGdU">Neste video</a> do canal dela é possível ver eu trabalhando no jogo. O código do jogo está no <a href="https://github.com/cicanci/game-defold-ld35">GitHub</a> e jogo para Web, Windows, Mac OS X e Linux está na página do <a href="http://ludumdare.com/compo/ludum-dare-35/?action=preview&amp;uid=52021">Ludum Dare</a>. Baixem, joguem, e me digam o que mais posso melhorar! </p>]]></content:encoded></item><item><title><![CDATA[Esta semana começa o Ludum Dare #35]]></title><description><![CDATA[<p>Sexta-feira às 22h (horário de Brasilia) começa o <a href="http://ludumdare.com/compo/">Ludum Dare #35</a>, e eu admito que depois de participar das 3 <a href="http://ludumdare.com/compo/author/cicanci/">últimas edições</a> acabei ficando "viciado" em no LD, e sempre fico ansioso quando uma nova edição se aproxima.</p>

<p>Neste post sobre o <a href="http://gamedeveloper.com.br/hoje-comeca-o-ludum-dare-33/">Ludum Dare #33</a> eu dei algumas dicas, e</p>]]></description><link>http://gamedeveloper.com.br/comeca-o-ludum-dare-35/</link><guid isPermaLink="false">58a42506-25e3-4af0-bbc3-e6a0346c4dd0</guid><category><![CDATA[notícias]]></category><category><![CDATA[ludum dare]]></category><dc:creator><![CDATA[Bruno Cicanci]]></dc:creator><pubDate>Wed, 13 Apr 2016 15:24:00 GMT</pubDate><media:content url="http://gamedeveloper.com.br/content/images/2016/04/LD2009-HighresNoShadow.jpg" medium="image"/><content:encoded><![CDATA[<img src="http://gamedeveloper.com.br/content/images/2016/04/LD2009-HighresNoShadow.jpg" alt="Esta semana começa o Ludum Dare #35"><p>Sexta-feira às 22h (horário de Brasilia) começa o <a href="http://ludumdare.com/compo/">Ludum Dare #35</a>, e eu admito que depois de participar das 3 <a href="http://ludumdare.com/compo/author/cicanci/">últimas edições</a> acabei ficando "viciado" em no LD, e sempre fico ansioso quando uma nova edição se aproxima.</p>

<p>Neste post sobre o <a href="http://gamedeveloper.com.br/hoje-comeca-o-ludum-dare-33/">Ludum Dare #33</a> eu dei algumas dicas, e eu mesmo segui elas nas 3 últimas edições. Desta vez eu vou fazer algumas coisas bem diferentes, e espero que eu consiga terminar o jogo em 48 horas.</p>

<h3 id="norecomendomasvoufazer">Não recomendo, mas vou fazer</h3>

<ul>
<li><p>Utilizar uma game engine que nunca usei: desta vez vou desenvolver o jogo utilizando a <a href="http://gamedeveloper.com.br/king-defold-engine-2d/">Defold</a>, uma game engine nova e que minha experiência foi um tutorial durante esta semana.</p></li>
<li><p>Pensar grande: nas edições passadas pensei em jogos que eram possíveis em 48 horas, e isso me limitou bastante. Desta vez vou pensar em algo maior do que 48 horas, e me forçar a terminar no prazo.</p></li>
<li><p>Mais tempo: já avisei minha família e minha <a href="https://www.youtube.com/channel/UCTk3xkOSzWzf8Ba-wJN8jDA">namorada</a> que vou ficar isolado nessas 48 horas participando do LD, antes eu não avisava com antecedência e acabei tendo pouco tempo por causa de compromissos.</p></li>
<li><p>Mais pressão: como quero fazer algo maior e com uma game engine que praticamente não tenho experiência, esta pressão de fazer tudo em 48 horas vai ser maior, e espero que me motive mais. </p></li>
<li><p>Vou tentar não dormir: escolher jogos que eram possíveis me deram tempo até pra dormir, desta vez acho que não vou ter este luxo ou se tiver será bem curto. </p></li>
</ul>

<h3 id="dicasimportantes">Dicas importantes</h3>

<ul>
<li><p>Escolha a linguagem de programação, framework ou game engine antes de começar e tenha certeza de que tudo está atualizado para não perder tempo esperando downloads.</p></li>
<li><p>Vai ser necessário criar arte e som, então já se prepare antecipadamente para isso (mesmo que você ache que não vai dar tempo, se prepare pois vai que dá).</p></li>
<li><p>Se você tem dificuldade em se concentrar, não deixe a TV ligada e evite YouTube, tente ouvir trilha sonoras ou músicas que você gosta.</p></li>
<li><p>Parece bobo mas planeja como serão suas refeições, e tente não sair pra comer pois isso pode te custar um tempo precioso. No meu caso, já estoquei café.</p></li>
<li><p>Planeje o que fazer em caso de falta de internet e/ou falta de energia elétrica, é sempre bom ter um plano B e um lugar pra ir (algo tipo Starbucks, por exemplo).</p></li>
</ul>

<p>Links interessantes:</p>

<p><a href="http://gamedeveloper.com.br/ludum-dare-32/">Minha participação no Ludum Dare #32</a></p>

<p><a href="http://gamedeveloper.com.br/ludum-dare-33/">Minha participação no Ludum Dare #33</a></p>

<p><a href="http://gamedeveloper.com.br/ludum-dare-34/">Minha participação no Ludum Dare #34</a></p>]]></content:encoded></item></channel></rss>